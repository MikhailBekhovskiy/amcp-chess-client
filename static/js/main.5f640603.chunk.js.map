{"version":3,"sources":["containers/Home.js","containers/NotFound.js","components/AppliedRoute.js","components/LoaderButton.js","libs/hooksLib.js","containers/Login.js","containers/Signup.js","containers/NewGame.js","config.js","components/Chat.js","containers/Game.js","containers/Profile.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","useState","games","setGames","isLoading","setIsLoading","useEffect","a","async","isAuthenticated","API","get","alert","onLoad","className","PageHeader","ListGroup","concat","map","game","i","key","gameId","to","ListGroupItem","header","trim","split","Date","createdAt","toLocaleString","renderGamesList","NotFound","AppliedRoute","C","component","appProps","rest","render","LoaderButton","disabled","Button","Glyphicon","glyph","children","useFormFields","initialState","fields","setValues","event","target","id","value","Login","email","password","handleFieldChange","onSubmit","preventDefault","Auth","signIn","userHasAuthenticated","message","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","length","Signup","confirmPassword","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","post","handleConfirmationSubmit","confirmSignUp","history","push","HelpBlock","NewGame","roomType","createGame","body","REGION","URL","WS","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","Chat","MessagesContainer","messages","text","componentClass","textOnChange","style","overflow","bsStyle","ChatMessage","transformNotation","fenNotation","result","lines","skipped","forEach","line","piece","j","parseInt","position","String","fromCharCode","toString","Game","userHasJoinedGame","state","move","moves","socket","chess","pieces","connectToWebSocket","bind","validateMessageForm","validateMoveForm","sendToWebsocket","sendMessage","sendInfo","disconnect","leaveGame","submitSend","sendMove","onMovePiece","this","WebSocket","config","onmessage","data","JSON","parse","console","log","action","setState","chessCopy","sloppy","fen","ChessGame","stringify","onerror","error","readyState","send","setTimeout","match","params","del","close","fromSquare","toSquare","when","ChessBoard","getDefaultLineup","e","React","Component","Profile","parties","setParties","Party","show","setShow","handleClose","party","onClick","user1Id","user2Id","winner","onHide","animation","Header","closeButton","Title","Body","Footer","variant","renderPartiesList","AuthenticatedRoute","location","pathname","search","UnauthenticatedRoute","redirect","name","url","window","href","replace","results","RegExp","exec","decodeURIComponent","querystring","Routes","path","exact","withRouter","isAuthenticating","setIsAuthenticating","inGame","currentSession","Navbar","fluid","collapseOnSelect","Brand","Toggle","Collapse","Nav","pullRight","NavItem","signOut","Boolean","hostname","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","endpoints","endpoint","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f640603.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { API } from \"aws-amplify\";\nimport \"./Home.css\";\n\nexport default function Home(props) {\n  const [games, setGames] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!props.isAuthenticated) {\n        return;\n      }\n  \n      try {\n        const games = await loadGames();\n        setGames(games);\n      } catch (e) {\n        alert(e);\n      }\n  \n      setIsLoading(false);\n    }\n  \n    onLoad();\n  }, [props.isAuthenticated]);\n  \n  function loadGames() {\n    return API.get(\"chess\", \"/games\");\n  }\n\n  function renderGamesList(games) {\n    return [{}].concat(games).map((game, i) =>\n      i !== 0 ? (\n        <LinkContainer key={game.gameId} to={`/games/${game.gameId}`}>\n          <ListGroupItem header={game.gameId.trim().split(\"\\n\")[0]}>\n            {\"Created: \" + new Date(game.createdAt).toLocaleString()}\n          </ListGroupItem>\n        </LinkContainer>\n      ) : (\n        <LinkContainer key=\"new\" to=\"/games/new\">\n          <ListGroupItem>\n            <h4>\n              <b>{\"\\uFF0B\"}</b> Create a new game\n            </h4>\n          </ListGroupItem>\n        </LinkContainer>\n      )\n    );\n  }\n\n  function renderLander() {\n    return (\n      <div className=\"lander\">\n        <h1>Scratch</h1>\n        <p>A sample for the future of online gaming!</p>\n      </div>\n    );\n  }\n\n  function renderGames() {\n    return (\n      <div className=\"games\">\n        <PageHeader>Games</PageHeader>\n        <ListGroup>\n          {!isLoading && renderGamesList(games)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      {props.isAuthenticated ? renderGames() : renderLander()}\n    </div>\n  );\n}","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default function AppliedRoute({ component: C, appProps, ...rest }) {\n  return (\n    <Route {...rest} render={props => <C {...props} {...appProps} />} />\n  );\n}","import React from \"react\";\nimport { Button, Glyphicon } from \"react-bootstrap\";\nimport \"./LoaderButton.css\";\n\nexport default function LoaderButton({\n  isLoading,\n  className = \"\",\n  disabled = false,\n  ...props\n}) {\n  return (\n    <Button\n      className={`LoaderButton ${className}`}\n      disabled={disabled || isLoading}\n      {...props}\n    >\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n      {props.children}\n    </Button>\n  );\n}","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Login.css\";\n\nexport default function Login(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(fields.email, fields.password);\n      props.userHasAuthenticated(true);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Login\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Signup.css\";\n\nexport default function Signup(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      API.post(\"chess\",\"/signup\");\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n  \n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n  \n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <ControlLabel>Confirmation Code</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode}\n          />\n          <HelpBlock>Please check your email for the code.</HelpBlock>\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}\n        >\n          Verify\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderForm() {\n    return (\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Signup\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./NewGame.css\";\n\nexport default function NewGame(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    roomType: \"\"\n  });\n\n  function validateForm() {\n    // return fields.time.length && Number.isInteger(+fields.roomType);\n    return fields.roomType === \"hidden\" || fields.roomType === \"open\" || fields.roomType === \"\";\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      let body = {roomType: fields.roomType.length > 0 ? fields.roomType : \"open\"}\n      let game = await createGame(body);\n      props.history.push(\"/games/\" + game.gameId);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function createGame(game) {\n    return API.post(\"chess\", \"/games\", {\n      body: game\n    });\n  }\n\n  return (\n    <div className=\"NewGame\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"roomType\" bsSize=\"large\">\n          <ControlLabel>Open or hidden</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"textarea\"\n            value={fields.roomType}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}","export default {\n    apiGateway: {\n      REGION: \"eu-central-1\",\n      URL: \"https://qh07nhidve.execute-api.eu-central-1.amazonaws.com/dev\",\n      WS: \"wss://07lk2rj3i7.execute-api.eu-central-1.amazonaws.com/dev\",\n    },\n    cognito: {\n      REGION: \"eu-central-1\",\n      USER_POOL_ID: \"eu-central-1_sCMpoCFo2\",\n      APP_CLIENT_ID: \"3khsh883ngocv1c1kpklgmrk1f\",\n      IDENTITY_POOL_ID: \"eu-central-1:da8ff3f9-8814-4dee-8128-6c26de954437\",\n    }\n  };","import React from \"react\";\nimport { FormGroup, FormControl } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./Chat.css\"\n\nexport default function Chat(props) {\n    return (\n      <div className=\"Chat\">\n        <MessagesContainer messages={props.messages}/>\n        <form onSubmit={props.handleSubmit}>\n          <FormGroup controlId=\"text\">\n            <FormControl\n              value={props.text}\n              componentClass=\"textarea\"\n              onChange={props.textOnChange}\n              style={{overflow:\"hidden\"}}\n            />\n          </FormGroup>\n          <LoaderButton\n            block\n            type=\"submit\"\n            bsSize=\"large\"\n            bsStyle=\"primary\"\n            isLoading={props.isLoading}\n            disabled={props.disabled}\n          >\n            Send\n          </LoaderButton>\n        </form>\n      </div>\n    )\n  }\n  \n  function MessagesContainer(props) {\n    return (\n      <div className=\"MessagesContainer\">\n        {props.messages.map((message, i) =>\n          // <div className=\"ChatMessage\" key={(\"message-\"+i)}>{message}</div>\n          <ChatMessage key={(\"message-\"+i)} message={message}/>\n        )}\n      </div>\n    )\n  }\n  \n  function ChatMessage(props) {\n    return (\n      <div className=\"ChatMessage\">\n        {/* <div className=\"header\">\n          <div className=\"author\">\n            {props.message.author}  \n          </div>\n        </div> */}\n        <div className=\"body\">\n          <div className=\"text\">\n            {props.message}\n          </div>\n        </div>\n      </div>\n    )\n  }","import React from \"react\";\nimport { Prompt } from \"react-router\";\nimport { API } from \"aws-amplify\";\nimport \"./Game.css\";\nimport config from \"../config\";\nimport { FormGroup, FormControl } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport Chat from \"../components/Chat\";\nimport ChessBoard from \"react-chess\";\nimport ChessGame from \"chess.js\";\n\nconst lineup = ['R@h1', 'P@f2', 'q@d8', 'R@a1', 'P@a2', 'P@c2', 'b@c8', 'p@d7', 'Q@d1', 'n@g8']\n\n// from fen\n//        ...\n// to ['R@h1', 'P@f2', 'q@d8', ...]\nfunction transformNotation(fenNotation) {\n  var result = [];\n  let figures = fenNotation.split(' ')[0];\n  let lines = figures.split('/');\n  var skipped = 0;\n  lines.forEach((line, i) => {\n    skipped = 0;\n    [...line].forEach((piece, j) => {\n      if (piece >= '0' && piece <= '8') {\n        skipped += parseInt(piece) - 1;\n      }\n      else {\n        const position = String.fromCharCode(j + 97 + skipped) + (8 - i).toString();\n        result.push(piece + '@' + position);\n      }\n    })\n  });\n  return result;\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    props.userHasJoinedGame(true);\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      text: \"\",\n      move: \"\",\n      moves: [],\n      messages: [\n        // {author: \"Author\", text: \"Hello world\"},\n      ],\n      socket: null,\n      chess: null,\n      pieces: []\n    }\n\n    // binding\n    this.connectToWebSocket = this.connectToWebSocket.bind(this);\n    this.validateMessageForm = this.validateMessageForm.bind(this);\n    this.validateMoveForm = this.validateMoveForm.bind(this);\n    this.sendToWebsocket = this.sendToWebsocket.bind(this);\n    this.sendMessage = this.sendMessage.bind(this);\n    this.sendInfo = this.sendInfo.bind(this);\n    this.disconnect = this.disconnect.bind(this);\n    this.leaveGame = this.leaveGame.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.submitSend = this.submitSend.bind(this);\n    this.sendMove = this.sendMove.bind(this);\n    this.onMovePiece = this.onMovePiece.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.connectToWebSocket();\n    this.sendInfo();\n  }\n\n  connectToWebSocket() {\n    let socket = new WebSocket(config.apiGateway.WS);\n    socket.onmessage = (event) => {\n      let data = JSON.parse(event.data);\n      console.log(\"New message:\", event);\n      switch (data.action) {\n      case \"sendMessage\":\n        this.setState((state, props) => {\n          return {messages: state.messages.concat(data.message)};\n        });\n        break;\n      case \"gameOver\":\n      case \"move\":\n        this.setState((state, props) => {\n          return {moves: state.moves.concat(data.move)};\n        });\n        let chessCopy = this.state.chess;\n        chessCopy.move(data.move, {sloppy: true});\n        this.setState({\n          chess: chessCopy,\n          pieces: transformNotation(chessCopy.fen()),\n        })\n        break;\n      case \"gameStarted\":\n        this.setState({\n          chess: new ChessGame()\n        });\n        break;\n      default:\n        this.setState((state, props) => {\n          return {messages: state.messages.concat(\"Unknown socket message:\", JSON.stringify(data))};\n        });\n      }\n    }\n\n    socket.onerror = (event) => {\n      console.error(\"WebSocket error observed:\", event);\n    }\n\n    this.setState({\n      socket: socket\n    })\n  }\n\n  validateMessageForm() {\n    return this.state.text.length > 0;\n  }\n\n  validateMoveForm() {\n    return this.state.move.length > 0;\n  }\n\n  async sendToWebsocket(body) {\n    if (!this.state.socket.readyState) {\n      this.setState({ isLoading: true });\n      setTimeout(() => {\n        this.sendToWebsocket(body);\n      }, 100);\n    }\n    else {\n      this.state.socket.send(JSON.stringify(body));\n      this.setState({ isLoading: false });\n    }\n  }\n\n  sendMessage() {\n    let body = {\n      \"action\": \"propagateMessage\",\n      \"message\": this.state.text,\n      \"gameId\": `${this.props.match.params.id}`,\n    };\n    this.sendToWebsocket(body);\n  }\n\n  async sendInfo() {\n    if (!this.state.socket) {\n      this.setState({ isLoading: true });\n      setTimeout(() => {\n        this.sendInfo();\n      }, 100);\n    }\n    else {\n      let body = {\n        \"action\": \"send-gameid\",\n        \"gameId\": `${this.props.match.params.id}`,\n      };\n      await this.sendToWebsocket(body);\n      await API.post(\"chess\", `/games/${this.props.match.params.id}`, {\n        body: {\n          gameId: `${this.props.match.params.id}`,\n        },\n      });\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async disconnect() {\n    await API.del(\"chess\", `/games/${this.props.match.params.id}`, {\n      body: {\n        gameId: `${this.props.match.params.id}`,\n      },\n    });\n    if (this.state.socket) {\n      this.state.socket.close();\n    }\n  }\n\n  async leaveGame() {\n    await this.disconnect();\n    this.props.userHasJoinedGame(false);\n    return true;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.sendMessage();\n  }\n\n  submitSend(event) {\n    event.preventDefault();\n    this.sendMove(this.state.move);\n  }\n\n  sendMove(move) {\n    let body = {\n      action: \"makeMove\",\n      move: move,\n      gameId: `${this.props.match.params.id}`\n    }\n    this.sendToWebsocket(body);\n  }\n\n  onMovePiece(piece, fromSquare, toSquare) {\n    console.log(fromSquare, toSquare);\n    let chessCopy = this.state.chess;\n    if (chessCopy.move(fromSquare + toSquare, {sloppy: true})) {\n      this.sendMove(fromSquare + toSquare);\n    }\n    this.setState({\n      chess: chessCopy\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"Game\">\n        <Prompt\n          when={true}\n          message={this.leaveGame}\n        />\n\n        <div className=\"BoardWrapper\">\n          <ChessBoard pieces={\n            this.state.chess\n            ? transformNotation(this.state.chess.fen())\n            : ChessBoard.getDefaultLineup()\n            }\n            onMovePiece={this.onMovePiece}/>\n        </div>\n\n        <div className=\"Forms\">\n          <Chat messages={this.state.messages}\n                handleSubmit={this.handleSubmit}\n                text={this.state.text}\n                textOnChange={e => this.setState({text: e.target.value})}\n                isLoading={this.state.isLoading}\n                disabled={!this.validateMessageForm()}\n          />\n          \n          <div className=\"Moves\">\n            <form onSubmit={this.submitSend}>\n              <FormGroup controlId=\"content\">\n                <FormControl\n                  value={this.state.move}\n                  componentClass=\"textarea\"\n                  onChange={e => this.setState({move: e.target.value})}\n                />\n              </FormGroup>\n              <LoaderButton\n                block\n                type=\"submit\"\n                bsSize=\"large\"\n                bsStyle=\"primary\"\n                isLoading={this.state.isLoading}\n                disabled={!this.validateMoveForm()}\n              >SendMove\n              </LoaderButton>\n            </form>\n            <div>{this.state.moves}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game;","import React, { useState, useEffect } from \"react\";\nimport { PageHeader, ListGroup, ListGroupItem, Button } from \"react-bootstrap\";\nimport { API } from \"aws-amplify\";\nimport Modal from 'react-modal';\n// import \"./Home.css\";\n\nexport default function Profile(props) {\n  const [parties, setParties] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!props.isAuthenticated) {\n        return;\n      }\n  \n      try {\n        const parties = await loadParties();\n        console.log(\"parties:\", parties);\n        setParties(parties);\n      } catch (e) {\n        alert(e);\n      }\n  \n      setIsLoading(false);\n    }\n  \n    onLoad();\n  }, [props.isAuthenticated]);\n  \n  function loadParties() {\n    return API.get(\"chess\", \"/profile/parties\");\n  }\n\n  function renderPartiesList(parties) {\n    \n    function Party(props) {\n      const [show, setShow] = useState(false);\n      const handleClose = () => setShow(false);\n      const handleShow = () => setShow(true);\n      let party = props.party;\n      return (\n      <>\n        <Button onClick={handleShow}>\n          <ListGroupItem  header={party.gameId}>\n            {\"Created: \" + new Date(party.createdAt).toLocaleString() + '|' +\n            party.user1Id + '|' + party.user2Id + '|' + party.winner}\n          </ListGroupItem>\n        </Button>\n        <Modal show={show} onHide={handleClose} animation={false}>\n          <Modal.Header closeButton>\n            <Modal.Title>Modal heading</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleClose}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n      )\n    }\n\n    return [].concat(parties).map((party, i) =>\n      <Party party={party} key={party.createdAt}/>\n    );\n  }\n\n  function renderLander() {\n    return (\n      <div className=\"lander\">\n        <p>Here are your parties!</p>\n      </div>\n    );\n  }\n\n  function renderParties() {\n    return (\n      <div className=\"parties\">\n        <PageHeader>Your Parties</PageHeader>\n        <ListGroup>\n          {!isLoading && renderPartiesList(parties)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      {props.isAuthenticated ? renderParties() : renderLander()}\n    </div>\n  );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function AuthenticatedRoute({ component: C, appProps, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        appProps.isAuthenticated\n          ? <C {...props} {...appProps} />\n          : <Redirect\n              to={`/login?redirect=${props.location.pathname}${props.location\n                .search}`}\n            />}\n    />\n  );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function UnauthenticatedRoute({ component: C, appProps, ...rest }) {\n  const redirect = querystring(\"redirect\");\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !appProps.isAuthenticated\n          ? <C {...props} {...appProps} />\n          : <Redirect\n              to={redirect === \"\" || redirect === null ? \"/\" : redirect}\n            />}\n    />\n  );\n}\n\nfunction querystring(name, url = window.location.href) {\n  name = name.replace(/[[]]/g, \"\\\\$&\");\n\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n  const results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return \"\";\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport NotFound from \"./containers/NotFound\";\nimport AppliedRoute from \"./components/AppliedRoute\";\nimport Login from \"./containers/Login\";\nimport Signup from \"./containers/Signup\";\nimport NewGame from \"./containers/NewGame\";\nimport Game from \"./containers/Game\"\nimport Profile from \"./containers/Profile\"\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\n\n\nexport default function Routes({ appProps }) {\n  return (\n    <Switch>\n      <AppliedRoute path=\"/\" exact component={Home} appProps={appProps} />\n      <UnauthenticatedRoute path=\"/login\" exact component={Login} appProps={appProps} />\n      <UnauthenticatedRoute path=\"/signup\" exact component={Signup} appProps={appProps} />\n      <AuthenticatedRoute path=\"/games/new\" exact component={NewGame} appProps={appProps} />\n      <AuthenticatedRoute path=\"/games/:id\" exact component={Game} appProps={appProps} />\n      <AuthenticatedRoute path=\"/profile\" exact component={Profile} appProps={appProps} />\n\n      { /* Finally, catch all unmatched routes */ }\n      <Route component={NotFound} />\n    </Switch>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Auth } from \"aws-amplify\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\n\nfunction App(props) {\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const [inGame, userHasJoinedGame] = useState(false);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n  \n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n  \n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n  \n    userHasAuthenticated(false);\n    userHasJoinedGame(false);\n\n    props.history.push(\"/login\");\n  }\n\n  return (\n    !isAuthenticating &&\n    <div className=\"App container\">\n      <Navbar fluid collapseOnSelect>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/\">Scratch</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle />\n        </Navbar.Header>\n        <Navbar.Collapse>\n          <Nav pullRight>\n            {isAuthenticated\n            ? !inGame \n              ? <>\n                  <LinkContainer to=\"/games/new\">\n                    <NavItem>Create a game</NavItem>\n                  </LinkContainer>\n                  <NavItem onClick={handleLogout}>Logout</NavItem>\n                </>\n              : <LinkContainer to=\"/\">\n                  <NavItem>Leave</NavItem>\n                </LinkContainer>\n            : <>\n                <LinkContainer to=\"/signup\">\n                  <NavItem>Signup</NavItem>\n                </LinkContainer>\n                <LinkContainer to=\"/login\">\n                  <NavItem>Login</NavItem>\n                </LinkContainer>\n              </>\n            }\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n      <Routes appProps={{ isAuthenticated, userHasAuthenticated, inGame, userHasJoinedGame }} />\n    </div>\n  );\n}\n\nexport default withRouter(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Amplify from 'aws-amplify';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport config from './config';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"chess\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}